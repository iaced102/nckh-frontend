{"ast":null,"code":"import { read, utils } from 'xlsx';\n// interface President {\n//   Name: string;\n//   Index: number;\n// }\nexport default {\n  data() {\n    return {\n      file: undefined\n    };\n  },\n  methods: {\n    async handleFile(e, b, c) {\n      console.log(b, c);\n      let file = await e.arrayBuffer();\n      console.log(file);\n      const wb = read(file);\n      const data = utils.sheet_to_json(wb.SheetNames[0]);\n      console.log(data);\n      console.log(wb);\n      console.log(e.arrayBuffer());\n      // console.log(this.file.files, e)\n      // var files = document.getElementById('file').files;\n      // let render = new FileReader()\n      // render.readAsBinaryString(this.file)\n      // render.onload = (e) => {\n      //     var data = e.target.result;\n      //     // var workbook = XLSX.read(data, { type: 'binary' })\n      //     console.log(data)\n      // }\n      // console.log(files)\n      // // const f = await (await fetch(this.file.name)).arrayBuffer();\n      // // console.log(f)\n      // const wb = read(this.file);\n      // console.log(wb)\n      // // const data = utils.sheet_to_json < President > (wb.Sheets[wb.SheetNames[0]]);\n      // let data = utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]])\n      // console.log(data);\n      // console.log(e, b, c)\n      // console.log(this.file)\n    }\n  }\n};","map":{"version":3,"mappings":"AAQA;AACA;AACA;AACA;AACA;AACA;EACAA;IACA;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACA;MACAA;MACA;MACA;MACAA;MACAA;MACAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;AACA","names":["data","file","methods","console"],"sourceRoot":"src/components/document","sources":["ConfigDocument.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <p>asdfsadf</p>\r\n        <v-file-input id=\"file\" v-model=\"file\" @change=\"handleFile\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { read, utils } from 'xlsx';\r\n// interface President {\r\n//   Name: string;\r\n//   Index: number;\r\n// }\r\nexport default {\r\n    data() {\r\n        return {\r\n            file: undefined,\r\n        }\r\n    },\r\n    methods: {\r\n        async handleFile(e, b, c) {\r\n            console.log(b, c)\r\n            let file = await e.arrayBuffer()\r\n            console.log(file)\r\n            const wb = read(file)\r\n            const data = utils.sheet_to_json(wb.SheetNames[0])\r\n            console.log(data)\r\n            console.log(wb)\r\n            console.log(e.arrayBuffer())\r\n            // console.log(this.file.files, e)\r\n            // var files = document.getElementById('file').files;\r\n            // let render = new FileReader()\r\n            // render.readAsBinaryString(this.file)\r\n            // render.onload = (e) => {\r\n            //     var data = e.target.result;\r\n            //     // var workbook = XLSX.read(data, { type: 'binary' })\r\n            //     console.log(data)\r\n            // }\r\n            // console.log(files)\r\n            // // const f = await (await fetch(this.file.name)).arrayBuffer();\r\n            // // console.log(f)\r\n            // const wb = read(this.file);\r\n            // console.log(wb)\r\n            // // const data = utils.sheet_to_json < President > (wb.Sheets[wb.SheetNames[0]]);\r\n            // let data = utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]])\r\n            // console.log(data);\r\n            // console.log(e, b, c)\r\n            // console.log(this.file)\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}