{"ast":null,"code":"export default {\n  methods: {\n    handleFile(e, b, c) {\n      var files = document.getElementById('file_upload').files;\n      if (files.length == 0) {\n        alert(\"Please choose any file...\");\n        return;\n      }\n      var filename = files[0].name;\n      var extension = filename.substring(filename.lastIndexOf(\".\")).toUpperCase();\n      if (extension == '.XLS' || extension == '.XLSX') {\n        this.excelFileToJSON(files[0]);\n      } else {\n        alert(\"Please select a valid excel file.\");\n      }\n    },\n    excelFileToJSON(file) {\n      try {\n        var reader = new FileReader();\n        reader.readAsBinaryString(file);\n        reader.onload = function (e) {\n          var data = e.target.result;\n          var workbook = XLSX.read(data, {\n            type: 'binary'\n          });\n          var result = {};\n          console.log(workbook);\n          workbook.SheetNames.forEach(function (sheetName) {\n            var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n            if (roa.length > 0) {\n              result[sheetName] = roa;\n            }\n          });\n          //displaying the json result\n          var resultEle = document.getElementById(\"json-result\");\n          // resultEle.value=JSON.stringify(result, null, 4);\n          // resultEle.style.display='block';\n          console.log(resultEle);\n        };\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAQA;EACAA;IACAC;MACA;MACA;QACAC;QACA;MACA;MACA;MACA;MACA;QACA;MACA,OACA;QACAA;MACA;IACA;IACAC;MACA;QACA;QACAC;QACAA;UACA;UACA;YACAC;UACA,EAEA;UACA,cACA;UACAC;UACAC;YACA;YACA;cACAC;YACA;UACA,EACA;UACA;UACA;UACA;UACA;UACAF;QACA;MACA,EACA;QACAA;MACA;IACA;EACA;AACA","names":["methods","handleFile","alert","excelFileToJSON","reader","type","console","workbook","result"],"sourceRoot":"src/components/document","sources":["ConfigDocument.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <p>asdfsadf</p>\r\n        <v-file-input id=\"file_upload\" @change=\"handleFile\" />\r\n    </div>\r\n</template>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.min.js\"></script >\r\n    <script>\r\n        export default {\r\n            methods:{\r\n            handleFile(e, b, c){\r\n            var files = document.getElementById('file_upload').files;\r\n        if(files.length==0){\r\n            alert(\"Please choose any file...\");\r\n        return;\r\n        }\r\n        var filename = files[0].name;\r\n        var extension = filename.substring(filename.lastIndexOf(\".\")).toUpperCase();\r\n        if (extension == '.XLS' || extension == '.XLSX') {\r\n            this.excelFileToJSON(files[0]);\r\n        }\r\n        else{\r\n            alert(\"Please select a valid excel file.\");\r\n        }\r\n        },\r\n        excelFileToJSON(file){\r\n        try {\r\n          var reader = new FileReader();\r\n        reader.readAsBinaryString(file);\r\n        reader.onload = function(e) {\r\n            var data = e.target.result;\r\n        var workbook = XLSX.read(data, {\r\n            type : 'binary'\r\n            }\r\n\r\n        );\r\n        var result = {\r\n        };\r\n        console.log(workbook)\r\n        workbook.SheetNames.forEach(function(sheetName) {\r\n              var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\r\n              if (roa.length > 0) {\r\n            result[sheetName] = roa;\r\n              }\r\n            }\r\n        );\r\n        //displaying the json result\r\n        var resultEle=document.getElementById(\"json-result\");\r\n        // resultEle.value=JSON.stringify(result, null, 4);\r\n        // resultEle.style.display='block';\r\n        console.log(resultEle)\r\n          }\r\n        }\r\n        catch(e){\r\n            console.error(e);\r\n        }\r\n      }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}