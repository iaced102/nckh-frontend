{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { read, utils } from 'xlsx';\nimport { AgGridVue } from \"ag-grid-vue3\";\nexport default {\n  created() {\n    if (!(this.$store.state.user.user.userInfo.orgChart == 'superUser' || this.$store.state.user.user.userInfo.orgChart == 'staff')) {\n      this.$router.push('/');\n    }\n  },\n  components: {\n    'ag-grid': AgGridVue\n  },\n  data() {\n    return {\n      columnDefs: [{\n        headerName: \"\",\n        field: \"userNameDisplay\"\n      }, {\n        headerName: \"\",\n        field: \"id\"\n      }],\n      rawData: [],\n      file: undefined,\n      fetchColumnDefs: []\n    };\n  },\n  methods: {\n    render() {},\n    async handleFile(e) {\n      let file = await e.arrayBuffer();\n      const wb = read(file);\n      const data = utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]);\n      this.rawData = data;\n      this.translateRawData();\n    },\n    translateRawData() {\n      // let rawData =[]\n      let columnDefs = [];\n      let headerName = [];\n      this.rawData.map(e => {\n        console.log(Object.keys(e));\n        headerName = [...new Set(headerName.concat(Object.keys(e)))];\n        // concat(result, Object.keys(e))\n        console.log(headerName);\n      });\n      headerName.map(field => {\n        columnDefs.push({\n          field: field,\n          headerName: field\n        });\n      });\n      this.fetchColumnDefs = columnDefs;\n    }\n  },\n  computed: {\n    // fetchColumnDef() {\n    //     // let columnDefs = []\n    //     this.rawData.map(raw => {\n    //         Object.keys(raw)\n    //     })\n    //     return []\n    // }\n  }\n};","map":{"version":3,"mappings":";AAcA;AACA;AACA;EACAA;IACA;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;MACAC,aACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC,UAEA;IACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;QACAC;QACAR;QACA;QACAQ;MACA;MACAR;QACAD;UACAE;UACAD;QACA;MACA;MACA;IACA;EACA;EACAS;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAGA","names":["created","components","data","columnDefs","headerName","field","rawData","file","fetchColumnDefs","methods","render","translateRawData","console","computed"],"sourceRoot":"src/components/document","sources":["ConfigDocument.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <p>asdfsadf</p>\r\n        <v-text-field v-model=\"columnDefs[0].headerName\" type=\"text\" placeholder=\"name display\"></v-text-field>\r\n        <v-text-field v-model=\"columnDefs[1].headerName\" type=\"text\" placeholder=\"id\"></v-text-field>\r\n        <v-file-input id=\"file\" v-model=\"file\" @change=\"handleFile\" />\r\n        <v-btn @click=\"render\">\r\n            submit\r\n        </v-btn>\r\n        <ag-grid/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { read, utils } from 'xlsx';\r\nimport { AgGridVue } from \"ag-grid-vue3\";\r\nexport default {\r\n    created() {\r\n        if (!(this.$store.state.user.user.userInfo.orgChart == 'superUser' || this.$store.state.user.user.userInfo.orgChart == 'staff')) {\r\n            this.$router.push('/')\r\n        }\r\n    },\r\n    components:{\r\n        'ag-grid': AgGridVue\r\n    }, \r\n    data() {\r\n        return {\r\n            columnDefs:[\r\n                {\r\n                    headerName:\"\",\r\n                    field:\"userNameDisplay\"\r\n                },\r\n                {\r\n                    headerName:\"\",\r\n                    field:\"id\"\r\n                }\r\n            ],\r\n            rawData: [],\r\n            file: undefined,\r\n            fetchColumnDefs: []\r\n        }\r\n    },\r\n    methods: {\r\n        render() {\r\n\r\n        },\r\n        async handleFile(e) {\r\n            let file = await e.arrayBuffer()\r\n            const wb = read(file)\r\n            const data = utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]])\r\n            this.rawData = data\r\n            this.translateRawData()\r\n        },\r\n        translateRawData() {\r\n            // let rawData =[]\r\n            let columnDefs = []\r\n            let headerName = []\r\n            this.rawData.map(e => {\r\n                console.log(Object.keys(e))\r\n                headerName = [...new Set(headerName.concat(Object.keys(e)))]\r\n                // concat(result, Object.keys(e))\r\n                console.log(headerName)\r\n            })\r\n            headerName.map(field => {\r\n                columnDefs.push({\r\n                    field: field,\r\n                    headerName: field\r\n                })\r\n            })\r\n            this.fetchColumnDefs = columnDefs\r\n        }\r\n    },\r\n    computed: {\r\n        // fetchColumnDef() {\r\n        //     // let columnDefs = []\r\n        //     this.rawData.map(raw => {\r\n        //         Object.keys(raw)\r\n        //     })\r\n        //     return []\r\n        // }\r\n\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}